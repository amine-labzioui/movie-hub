/* Adding Consistent Styling and Responsive Design for MovieHub */

/* App.css */
:root {
  --primary-color: #1e90ff;
  --secondary-color: #ff6347;
  --bg-color: #f5f5f5;
  --text-color: #333;
}

body {
  font-family: 'Arial', sans-serif;
  background-color: var(--bg-color);
  color: var(--text-color);
  margin: 0;
  padding: 0;
}

.main-content {
  padding: 20px;
  margin: auto;
  max-width: 1200px;
}

html {
  scroll-behavior: smooth;
}

/* Navbar.css */
.nav-link {
  color: var(--text-color);
  text-decoration: none;
  padding: 8px 16px;
}

.nav-link:hover {
  color: var(--primary-color);
}

.nav-link.active {
  border-bottom: 2px solid var(--primary-color);
}

/* MovieCard.css */
.movie-card {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;
}

.movie-card:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* Home.css */
.movie-grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 20px;
}

@media (max-width: 768px) {
  .movie-grid {
    grid-template-columns: 1fr;
  }
}

@media (min-width: 769px) and (max-width: 1200px) {
  .movie-grid {
    grid-template-columns: 1fr 1fr;
  }
}

/* Performance Optimization */

// 1. Code Splitting
const Home = React.lazy(() => import('./pages/Home/Home'));
const Movies = React.lazy(() => import('./pages/Movies/Movies'));
const MovieDetails = React.lazy(() => import('./pages/MovieDetails/MovieDetails'));
const Favorites = React.lazy(() => import('./pages/Favorites/Favorites'));

// 2. Memoization
const MemoizedMovieCard = React.memo(MovieCard);

// 3. UseCallback for Event Handlers
const handleSearch = useCallback((query) => {
  setSearchQuery(query);
}, []);

// 4. Image Lazy Loading
<img src={movie.poster} loading="lazy" alt={movie.title} />

// 5. Dependency Optimization
useEffect(() => {
  fetchMovies();
}, []);
